name: app-time
on:
  push:
    paths:
      - '.github/workflows/time.yaml'
    branches: [ "master" ]
  workflow_dispatch:
env:
  APP_VERSION: "0.1.2"
  CLUSTER_NAME: "time"
  DNS_DOMAIN: "minube.cr"
  AWS_REGION: "us-east-1"
  NAMESPACE: "timeoff-management"
  AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT }}
jobs:
  code-checkout:
    runs-on: ec2-app
    steps:
      - name: "Checkout Repository Code"
        uses: actions/checkout@v3
      - run: echo "Repository has been cloned"
  check-versions:
    runs-on: ec2-app
    needs: code-checkout
    steps:
      - name: "Check Toolbox versions"
        run: |
          aws --version
          helm version --short | cut -d + -f 1
          docker version
          docker ps
          kubectl version --short --client
  run-tests:
    runs-on: ec2-app
    needs: [code-checkout, check-versions]
    steps:
      - name: "Run NVM Tests"
        run: |
          # npm test
  docker-build-tag-push:
    runs-on: ec2-app
    needs: run-tests
    steps:
      - name: "Docker Build"
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login \
          --username AWS --password-stdin ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
          docker build -t timeoff-management .
          docker tag timeoff-management:latest \
          ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/timeoff-management:${{ env.APP_VERSION }}
          docker push ${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/timeoff-management:${{ env.APP_VERSION }}
  update-kubeconfig:
    runs-on: ec2-app
    needs: docker-build-tag-push
    steps:
      - name: "Update KubeConfig"
        run: |
          aws eks update-kubeconfig --name ${{ env.CLUSTER_NAME }} --region=${{ env.AWS_REGION }}
  deploy-app-to-k8s:
    runs-on: ec2-app
    needs: update-kubeconfig
    steps:
      - name: "AWS ECR token refresh & Helm Deploy Timeoff Management Application to Kubernetes"
        run: |
          kubectl apply -f k8s/manifests/namespace.yaml
          kubectl delete secret regcred --namespace=${{ env.NAMESPACE }} --ignore-not-found
          kubectl create secret docker-registry regcred \
          --docker-server=${{ env.AWS_ACCOUNT }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com \
          --docker-username=AWS --docker-password=$(aws ecr get-login-password --region ${{ env.AWS_REGION }}) \
          --namespace=${{ env.NAMESPACE }}
  gitops-helm-update:
    runs-on: ec2-app
    needs: update-kubeconfig
    steps:
      - name: "Update YAML files for Timeoff Management Application - ArgoCD"
        run: |
          yq -i '.image.tag = "${{ env.APP_VERSION }}"' "k8s/helm/timeoff-management-app/values.yaml"
          yq -i '.version = "${{ env.APP_VERSION }}"' "k8s/helm/timeoff-management-app/Chart.yaml"
          yq -i '.appVersion = "${{ env.APP_VERSION }}"' "k8s/helm/timeoff-management-app/Chart.yaml"
          git add k8s/helm/timeoff-management-app/values.yaml
          git add k8s/helm/timeoff-management-app/Chart.yaml
          git commit -m "EC2 Pipeline running for new version ${{ env.APP_VERSION }}" && git push
